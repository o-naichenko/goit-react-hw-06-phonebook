{"version":3,"sources":["App.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","deleteContact","changeFilter","contactsReducer","createReducer","state","payload","filter","id","filterReducer","persistConfig","key","storage","rootReducer","combineReducers","contacts","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getFilter","getContacts","getFilteredContacts","length","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onChangeHandler","e","currentTarget","value","className","s","Form","onSubmit","preventDefault","newContact","uuidv4","alert","checkInputsFill","find","checkContactUnique","label","input","type","placeholder","onChange","button","Filter","target","Contact","item","text","deleteBtn","onClick","ContactList","list","map","App","header","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f339f52f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"header\":\"App_header__3ZZ1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1d_kg\",\"text\":\"Contact_text__1-w6I\",\"deleteBtn\":\"Contact_deleteBtn__2fAPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from '@reduxjs/toolkit';\n// import types from \"./contacts-types\";\n\n// ADD: \"contacts/add\",\n// CHANGE_FILTER: \"contacts/filter\",\n// DELETE: \"contacts/delete\",\n\nconst contactsActions = {\n  addContact: createAction('contacts/add'),\n  deleteContact: createAction('contacts/delete'),\n  changeFilter: createAction('contacts/filter'),\n};\n\n// const addContact = (contact) => ({\n//   type: types.ADD,\n//   payload: contact,\n// });\n\n// const deleteContact = (contact) => ({\n//   type: types.DELETE,\n//   payload: contact,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nexport default contactsActions;\n","import { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nexport const contactsReducer = createReducer([], {\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const filterReducer = createReducer('', {\n  [contactsActions.changeFilter]: (state, { payload }) => payload,\n});\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       console.log(payload);\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer, filterReducer } from './contacts/contacts-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n\n// export default { store, persistor };\n","export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = state => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  if (filter.length === 0) {\n    return contacts;\n  } else {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n};\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors.js';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const clearState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function checkContactUnique(newContact) {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      setName('');\n      alert(`Contact with name: ${newContact.name} already exists`);\n      return false;\n    } else if (contacts.find(contact => contact.number === newContact.number)) {\n      setNumber('');\n      alert(`Contact with number: ${newContact.number} already exists`);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  function checkInputsFill(name, number) {\n    if (name.value.length === 0) {\n      alert('Please, fill name');\n      return false;\n    } else if (number.value.length === 0) {\n      alert('Please, fill phone number');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const onChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget;\n    const newContact = {\n      name: name.value,\n      number: number.value,\n      id: uuidv4(),\n    };\n    if (checkInputsFill(name, number) === false) {\n      return;\n    } else if (checkContactUnique(newContact) === true) {\n      dispatch(contactsActions.addContact(newContact));\n      clearState();\n    }\n  };\n\n  return (\n    <form className={s.Form} onSubmit={onSubmitHandler}>\n      <label className={s.label}>\n        <span>Name:</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={onChangeHandler}\n        ></input>\n      </label>\n      <label className={s.label}>\n        <span>Number:</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          placeholder=\"Phone number\"\n          name=\"number\"\n          value={number}\n          onChange={onChangeHandler}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './Filter.module.css';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  return (\n    <label className={s.label}>\n      <span>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        placeholder=\"Type name here\"\n        onChange={e => {\n          dispatch(contactsActions.changeFilter(e.target.value));\n        }}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './Contact.module.css';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={s.item}>\n      <p className={s.text}>{contact.name + ': ' + contact.number}</p>\n      <button\n        className={s.deleteBtn}\n        type=\"button\"\n        id={contact.id}\n        onClick={e => dispatch(contactsActions.deleteContact(e.target.id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport s from './ContactList.module.css';\nimport Contact from '../Contact';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport s from './App.module.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h1 className={s.header}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.header}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__Vd_-O\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}